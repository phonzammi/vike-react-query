import { create } from 'zustand'

// const useQueriesState = create(() => ({ knownQueries: new Map<string, boolean>() }))

// const useQueriesState2 = create<QueriesState>()((set) => ({
//     knownQueries: new Set<string>(['posts']),
//     add: (fetchedQuery: string) => set((prev) => new Set(prev.knownQueries).add(fetchedQuery)),
// }))
//const useQueriesStateWithSet = create(() => ({ knownQueries: new Set<string>() }))

type QueriesState = {
    knownQueries: Map<string, boolean>,
    set: (hashKey:string, isFetched:boolean) => void
}

const useQueriesState = create<QueriesState>()((set) => ({
    knownQueries: new Map<string,boolean>(),
    set: (hashKey:string, isFetched:boolean) => set((prev) => ({knownQueries: new Map(prev.knownQueries).set(hashKey, isFetched)}))
}))

export default useQueriesState